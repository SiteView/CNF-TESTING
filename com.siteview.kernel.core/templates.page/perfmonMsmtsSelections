<SCRIPT LANGUAGE='Javascript' SRC='/SiteView/htdocs/js/utils.js'></SCRIPT>
<SCRIPT LANGUAGE=javascript>

	function clearAllSelections(prefix){
		applySelections(prefix, false);
	}

	function selectAll(prefix){
		applySelections(prefix, true);
	}

	function clearMeasurements(){
		addMeasurementsToHTML(new Array());
	}

	function applySelections(prefix, checked){
		var objectsNum = document.getElementById(prefix+"sNum").value;
		for (i=0; i<objectsNum; i++){
			var obj = document.getElementById(prefix+i);
			obj.checked = checked;
		}

	}



	function addMeasurements(){

	    var objectName = document.getElementById("_objectName").value;

		var selectedInstances = getSelectedInputs(
		    document.getElementById("instancesFrame").contentWindow.document,
		    "instance");
		var selectedCounters = getSelectedInputs(
		    document.getElementById("countersFrame").contentWindow.document,
		    "counter");

		if (selectedInstances != null && selectedInstances.length == 0){
			alert("Please select instances");
			return;
		}

		if (selectedCounters.length == 0){
			alert("Please select counters");
			return;
		}

		var measurements = getCurrentMeasurements();
		if (selectedInstances == null){
			for (i=0; i<selectedCounters.length; i++){
				measurements.push(new Array(objectName + "\\" + selectedCounters[i][0], selectedCounters[i][1]));
			}
		}else{
			for (i=0; i<selectedInstances.length; i++){
				for (j=0; j<selectedCounters.length; j++){
					measurements.push(
						new Array(
							objectName + "\\" + selectedInstances[i][0]+ "\\" + selectedCounters[j][0],
							selectedCounters[j][1]));
				}
			}

		}

		addMeasurementsToHTML(getUniqueSortedMeasurements(measurements));
	}

	function getUniqueSortedMeasurements(measurements){
		measurements.sort(compareEntries);
		var uniqueMeasurements = new Array();
		for (i=0; i<measurements.length; i++){
			if (i==0){
				uniqueMeasurements.push(measurements[0]);
			}else if (measurements[i][0] != measurements[i-1][0]){
				uniqueMeasurements.push(measurements[i]);
			}
		}
		return uniqueMeasurements;
	}

	function getCurrentMeasurements(){
		return getPropsFromInputs("perfmonMsmt");
	}

	function addMeasurementsToHTML(measurements){
		document.getElementById("perfmonMsmtsNum").value = measurements.length;
		var innerHTML = "<TABLE BORDER=0 CELLSPACING=1 CELLPADDING=1>";
		for (i=0; i<measurements.length; i++){
			var title = "";
			var measurement = measurements[i];
			if (measurement[1] != null) title = " title=\"" + measurement[1] + "\" ";
			innerHTML +=
				"<TR>\
					<TD>\
						<input type=button onclick='removeMeasurement(" + i + ")' value=X>\
						<input type=hidden name='perfmonMsmtDispName"+i+"' id='perfmonMsmtDispName"+i+"' value='" + measurement[0] +"'>\
						<input type=hidden name='perfmonMsmtDescription"+i+"' id='perfmonMsmtDescription"+i+"' value='" + measurement[1] +"'>\
					</TD>\
					<TD " + title + ">" + measurement[0] +"\
					</TD>\
				</TR>";
		}
		innerHTML += "</TABLE>";
		document.getElementById("perfmonMsmtsDiv").innerHTML = innerHTML;
	}

	function removeMeasurement(index){
		var measurements = getCurrentMeasurements();
		if (index > measurements.length-1) return;
		measurements.splice(index, 1);
		addMeasurementsToHTML(measurements);
	}

	function loadInstancesAndCounters(){
	    var selectObj = document.getElementById("objectsSelect");
	    var objectName = "";
	    if (selectObj.selectedIndex > 0){
	        objectName = selectObj.options[selectObj.selectedIndex].value;
	    }
	    if (objectName == document.getElementById("_objectName").value) return;
	    document.getElementById("_objectName").value = objectName;

	    var tmp = document.getElementById("_instancesFrameUrl").value + objectName;
	    document.getElementById("instancesFrame").src = tmp;

	    var tmp = document.getElementById("_countersFrameUrl").value + objectName;
	    document.getElementById("countersFrame").src = tmp;
	}

	function loadCurrentSettings(){
        if (!document.getElementById("countersFrame").contentWindow){
            alert(
                "This monitor cannot be configured through your current browser. " +
                "Please view documentation for supported browser versions");
            location.href = "/SiteView/cgi/go.exe/SiteView";
        }
        loadInstancesAndCounters();
	}

	function compareEntries(e1, e2){
		return e1[0] < e2[0]? -1 : (e1[0] == e2[0] ? 0 : 1);
	}



</SCRIPT>

<input type=hidden id=instancesNum value=0>
<input type=hidden id=countersNum value=0>
<input type=hidden id=_instancesFrameUrl value='<%loadInstancesUrl%>'>
<input type=hidden id=_countersFrameUrl value='<%loadCountersUrl%>'>
<input type=hidden id=_objectName value=''>

<META content="MSHTML 6.00.2800.1126" name=GENERATOR></HEAD>
<BODY>
<TABLE WIDTH="75%" BORDER=0 CELLSPACING=1 CELLPADDING=1 >
	<TR><TD>
		<TABLE style="WIDTH: 100%" cellSpacing=1 cellPadding=1 width="100%" border=0>
			<TR><TD><B>
			        1. Select the object you wish to monitor.<BR>
			        2. Select instances and counters.<BR>
					3. Click "Add" to add the selections to the list below.<BR>
					4. Click the "Submit" button to add the measurements to the monitor<BR><BR>
            </B></TD></TR>
			<TR>
				<TD>
					<TABLE style="WIDTH: 100%" cellSpacing=1 cellPadding=1 width="100%" border=1>
						<TR><TD>
							<TABLE style="WIDTH: 100%" cellSpacing=1 cellPadding=1 width="100%" border=0>
								<TR><TD style="WIDTH: 100%" align=middle><B>Available Measurements</B></TD></TR>
								<TR><TD>
                                    <B>Object:</B><BR>
                                    <%objectsSelect%>
								</TD></TR>
								<TR><TD>
								    <B>Instances:</B>
                                    <IFRAME id=instancesFrame marginheight="1" scrolling=no frameborder=1 width='100%' height='90px'></IFRAME>
								</TD></TR>
								<TR><TD>
								    <B>Counters:</B><BR>
                                    <IFRAME id=countersFrame marginheight="1" scrolling=no frameborder=1 width='100%' height='90px'></IFRAME>
								</TD></TR>
							</TABLE>
						</TD></TR>
					</TABLE>
				</TD>
			</TR>
			<TR>
				<TD align=middle>
					<input TYPE="button" onclick="addMeasurements();" value="Add">
				</TD>
			</TR>

			<TR>
				<TD>
					<TABLE style="WIDTH: 100%" cellSpacing=1 cellPadding=1
					 width="100%" border=1>
						<TR><TD>
						    <%formHeader%>
                                <TABLE style="WIDTH: 100%" cellSpacing=1 cellPadding=1 border=0>
                                    <TR><TD style="WIDTH: 100%"><B>Selected Measurements:</B>  </TD></TR>
                                    <TR >
                                        <TD>
                                            <input type=hidden id=perfmonMsmtsNum name=perfmonMsmtsNum value=0>
                                            <div id=perfmonMsmtsDiv style="BORDER-RIGHT: thin groove; BORDER-TOP: thin groove; OVERFLOW: auto;
                                            BORDER-LEFT: thin groove; BORDER-BOTTOM: thin groove; HEIGHT: 200px" >
                                            <%measurementsList%>
                                            </div>
                                        </TD>
                                        <TD vAlign=top>
                                            <input type=button title="Delete all measurements" value="Clear All" onclick='clearMeasurements()' id=button2 name=button2>
                                        </TD>

                                    </TR>
                                    <TR><TD>
                                        <INPUT type="submit" value="Submit" id=submit1 name=submit1>
                                    </TD></TR>
                                </TABLE>
							</FORM>
						</TD></TR>
					</TABLE>
				</TD>
			</TR>

		</TABLE>

	</TD></TR>
</TABLE>


<SCRIPT>loadCurrentSettings()</SCRIPT>
</BODY></HTML>
